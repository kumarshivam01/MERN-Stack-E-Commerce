{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\Desktop\\\\React Assignment\\\\MERN-Stack-E-Commerce\\\\frontend\\\\src\\\\screens\\\\HomeScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../actions/productionAction';\nimport ProductScreen from './ProductScreen';\nimport Loader from '../components/shared/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HomeScreen() {\n  _s();\n\n  const dispatch = useDispatch();\n  const productList = useSelector(state => state.productList);\n  const {\n    loading,\n    error,\n    products\n  } = productList;\n  useEffect(() => {\n    dispatch(listProducts());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 43\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ProductScreen, {\n          product: product\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(HomeScreen, \"+Kfo5mv+5h4frBKGytIisQkXo2Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["C:/Users/rohit/Desktop/React Assignment/MERN-Stack-E-Commerce/frontend/src/screens/HomeScreen.jsx"],"names":["React","useEffect","Row","Col","useDispatch","useSelector","listProducts","ProductScreen","Loader","HomeScreen","dispatch","productList","state","loading","error","products","map","product","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;;AACA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,WAAW,GAAGN,WAAW,CAACO,KAAK,IAAEA,KAAK,CAACD,WAAd,CAA/B;AACA,QAAM;AAACE,IAAAA,OAAD;AAASC,IAAAA,KAAT;AAAeC,IAAAA;AAAf,MAA2BJ,WAAjC;AACAV,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR;AACD,GAFQ,EAEP,CAACI,QAAD,CAFO,CAAT;AAIA,sBACE;AAAA,cACCG,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAAwBC,KAAK,gBAAC;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAD,gBACrC,QAAC,GAAD;AAAA,gBAEMC,QAAQ,CAACC,GAAT,CAAaC,OAAO,iBAClB,QAAC,GAAD;AAAuB,QAAA,EAAE,EAAE,CAA3B;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUA,OAAO,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA,cADF;AAFN;AAAA;AAAA;AAAA;AAAA;AAFA,mBADF;AAgBD;;GAxBuBT,U;UACLL,W,EACGC,W;;;KAFEI,U","sourcesContent":["import React, {useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { listProducts } from '../actions/productionAction'\r\nimport ProductScreen from './ProductScreen'\r\nimport Loader from '../components/shared/Loader'\r\nexport default function HomeScreen() {\r\n  const dispatch = useDispatch()\r\n  const productList = useSelector(state=>state.productList)\r\n  const {loading,error,products} = productList\r\n  useEffect(()=>{\r\n    dispatch(listProducts())\r\n  },[dispatch])\r\n\r\n  return (\r\n    <>\r\n    {loading ? <h1>loading....</h1>:error?<h1>{error}</h1> : \r\n    <Row>\r\n        {\r\n          products.map(product=>(\r\n            <Col key={product._id} md={3}>\r\n                <ProductScreen product={product} />\r\n              </Col>\r\n          ))\r\n        }\r\n      </Row>\r\n    }\r\n      \r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}